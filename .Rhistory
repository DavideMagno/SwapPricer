?lubridate::%m+%()
?lubridate::%m+%
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)})
?months
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
months.forward
start.date + months(months.forward)
start.date + months(months.forward) %>%
bizdays::modified.following('QuantLib/TARGET')
cashflows <- start.date + months(months.forward)
bizdays::modified.following(cashflows, 'QuantLib/TARGET')
library(SwapPricer)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
usethis::use_package("bizdays")
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
remove.packages("RQuantLib")
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::df.table)
R.Version()
fmdates::AUSYCalendar()
A <- fmdates::AUSYCalendar()
View(A)
locale(A)
fmdates::locale(A)
install.packages("timeDate")
timeDate::listHolidays("CH")
timeDate::listHolidays("US")
timeDate::listHolidays("EU")
timeDate::listHolidays("Target")
timeDate::holidayNYSE(2008:2010)
timeDate::holidayNYSE(2000:2050)
library(timeDate)
listHolidays()
CHSechselaeuten(getRmetricsOptions("currentYear"))
A <- CHSechselaeuten(getRmetricsOptions("currentYear"))
View(A)
A$Data
A
A@Data
holiday(2000:2010, "GoodFriday")
A <- holiday(2000:2100, "GoodFriday")
View(A)
map(A, .x@Date)
purrr::map(A, .x@Date)
purrr::map(A, ~.x@Date)
A@Data
B <- A@Data
B <- A@Data %>% as.Date
B
timeDate::listHolidays("GB")
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x))
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Date)
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
.@Date
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x))
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Date)
View(A)
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data)
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::map(as.Date)
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::map(as.Date) %>%
purrr::flatten()
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c)
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
purrr::map(as.Date)
A <- timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c)
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date
timeDate::listHolidays("GB") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort
timeDate::listHolidays("GB")
holidayNYSE(2008:2010)
listHolidays()
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay")
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay")
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay")
purrr::map(~timeDate::holiday(2000:2010,.x))
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x))
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort %>%
timeDate::isWeekday
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
timeDate::isWeekday
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c)
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::reduce(c) %>%
timeDate::isWeekday
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::reduce(c)
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::reduce(c) %>%
timeDate::isWeekday
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::reduce(c) %>%
timeDate::isWeekday(.)
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort %>%
wday
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort %>%
lubridate::wday
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort %>%
lubridate::wday(.)
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort %>%
lubridate::wday(label = TRUE)
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort %>%
bizdays::adjust.previous(cal)
cal <- bizdays::create.calendar("Actual", weekdays=c("saturday", "sunday"))
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort %>%
bizdays::adjust.previous(cal)
timeDate::listHolidays("GB") %>%
c(.,"NewYearsDay", "GoodFriday", "EasterMonday", "ChristmasDay", "BoxingDay") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
sort %>%
bizdays::following(cal)
timeDate::holiday(2000:2010, "ChristmasDay") %>%
.@Data %>%
as.Date %>%
weekdays
christmas <- timeDate::holiday(2000:2010, "ChristmasDay") %>%
.@Data %>%
as.Date
dplyr::case_when(weekdays(christmas) == "Saturday" ~ christmas + 2,
weekdays(christmas) == "Sunday" ~ christmas + 1,
TRUE ~ christmas)
christmas
boxing <- timeDate::holiday(2000:2010, "BoxingDay") %>%
.@Data %>%
as.Date
dplyr::case_when(weekdays(christmas) == "Saturday" ~ boxing + 2,
weekdays(christmas) == "Sunday" ~ boxing + 1,
TRUE ~ boxing)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
timeDate::listHolidays("GB") %>%
c(., "GoodFriday", "EasterMonday") %>%
purrr::map(~timeDate::holiday(2000:2010,.x)) %>%
purrr::map(~.x@Data) %>%
purrr::reduce(c) %>%
as.Date %>%
c(., christmas, boxing) %>%
sort
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
holidayLONDON(2000:2010)
holidayNYSE(2000:2010)
RcppQuantuccia::getHolidays(lubridate::dmy(01012000),lubridate::dmy(31122010))
library(RQuantLib)
install.packages("RQuantLib")
library(RQuantLib)
getHolidayList("TARGET", lubridate::dmy(01012000),lubridate::dmy(31122010))
target <- getHolidayList("TARGET", lubridate::dmy(01012000),lubridate::dmy(31122200))
target <- getHolidayList("TARGET", lubridate::dmy(01012000),lubridate::dmy(31122199))
target <- getHolidayList("TARGET", lubridate::dmy(01012000),lubridate::dmy(30122199))
getHolidayList("UnitedKingdom/Settlement", lubridate::dmy(01012000),lubridate::dmy(30122010))
holidayLONDON(2000:2010)
getHolidayList("UnitedKingdom/Exchange", lubridate::dmy(01012000),lubridate::dmy(30122010))
getHolidayList("UnitedKingdom/Exchange", lubridate::dmy(01012000),lubridate::dmy(30122020))
holidayLONDON(2000:2020)
getHolidayList("UnitedKingdom/Settlement", lubridate::dmy(01012000),lubridate::dmy(30122020))
SwapPricer::swap.basket
head(SwapPricer::swap.basket,13)
library(SwapPricer)
SwapPricer::swap.basket
SwapPricer:::swap.standard.rates
View(SwapPricer:::swap.standard.rates)
source('~/.active-rstudio-document', echo=TRUE)
realworld.portfolio <- SwapPricer:::realworld.portfolio
ir.curve <- SwapPricer:::ir.curve
swap.standard <- SwapPricer:::swap.standard
swap.standard.calendar <- SwapPricer:::swap.standard.calendar
swap.standard.rates <- SwapPricer:::swap.standard.rates
usethis::use_data(holidays, ir.curve, realworld.portfolio, swap.standard, swap.standard.calendar, swap.standard.rates, internal = TRUE, overwrite = TRUE)
library(SwapPricer)
SwapPricer:::holidays$CHF
View(holidays)
weekdays(holidays$EUR)
?fmdates
?fmdates::shift
fmdates::shift
fmdates::shift
fmdates::shift_single
View(holidays)
?MONTHS
?months
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::df.table)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves)
dcc.tibble
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
cashflows
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
months.forward
start.date
months(months.forward, abbreviate = FALSE)
months(months.forward, abbreviate = TRUE)
start.date + months(months.forward, abbreviate = FALSE)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
cashflows
currency
SwapPricer:::holidays[[currency]]
(cashflows %in% holiday)
(weekdays(cashflows) %in% "Saturday")
(weekdays(cashflows) %in% "Sunday")
(weekdays(cashflows) %in% "Saturday")
(weekdays(cashflows) %in% "Sunday")
(cashflows %in% holiday)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
cashflows
c
c
c
c
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)})
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)})
colnames(SwapPricer:::realworld.portfolio)
max(SwapPricer:::realworld.portfolio$maturity.date)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)
dates
Q
library(SwapPricer)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)
View(SwapPricer:::realworld.portfolio)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio[90], lubridate::ymd(20190414), SwapPricer::EUR.curves)
SwapPricer:::realworld.portfolio[90]
SwapPricer:::realworld.portfolio
SwapPricer:::realworld.portfolio[1,]
SwapPricer:::realworld.portfolio[90,]
SwapPricer:::realworld.portfolio[89,]
SwapPortfolioPricing(SwapPricer:::realworld.portfolio[90,], lubridate::ymd(20190414), SwapPricer::EUR.curves)
months.forward
(start.date + months(months.forward, abbreviate = FALSE))
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio[90,], lubridate::ymd(20190414), SwapPricer::EUR.curves)
(cashflows %in% holiday)
(weekdays(cashflows) %in% "Saturday")
(weekdays(cashflows) %in% "Sunday")
cashflows
?lubridate::months.numeric
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio[90,], lubridate::ymd(20190414), SwapPricer::EUR.curves)
cashflows
cashflows %in% holiday
holiday
(weekdays(cashflows) %in% "Saturday")
cashflows
cashflows
c
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)})
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)
start.date
ceiling_date(start.date, "month")
ceiling_date(start.date, "month") - days(1)
(ceiling_date(start.date, "month") - days(1)) == start.date
eom.check
SwapPortfolioPricing(SwapPricer:::realworld.portfolio[90,], lubridate::ymd(20190414), SwapPricer::EUR.curves)
start.date
(ceiling_date(start.date, "month") - days(1))
eom.check
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio[90,], lubridate::ymd(20190414), SwapPricer::EUR.curves)
eom.check
cashflows
cashflows
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)})
library(SwapPricer)
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)})
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio[90,], lubridate::ymd(20190414), SwapPricer::EUR.curves)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)})
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)})
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)})
a <- seq(-2,2)
a
a >= 0
a[a >= 0]
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)})
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
cashflows
cashflows
cashflows
cashflows
cashflows
diff(cashflows$yf)
library(SwapPricer)
SwapPricer::GBP.curves
View(SwapPricer::GBP.curves$discount)
library(readxl)
USD <- read_excel("~/Dropbox/Blog CuriousFRM/USD.xlsx")
View(USD)
USD.curves <- SwapPricer::USD.curves
EUR.curves <- SwapPricer::EUR.curves
GBP.curves <- SwapPricer::GBP.curves
USD.curves$discount
USD.curves$discount <- tibble::tibble(Date = USD$`Maturity Date`, df = USD$Discount)
library(readxl)
GBP <- read_excel("~/Dropbox/Blog CuriousFRM/GBP.xlsx")
View(GBP)
GBP.curves$discount <- tibble::tibble(Date = GBP$`Maturity Date`, df = GBP$Discount)
library(readxl)
EUR <- read_excel("~/Dropbox/Blog CuriousFRM/EUR.xlsx")
View(EUR)
EUR.curves$discount <- tibble::tibble(Date = EUR$`Maturity Date`, df = EUR$Discount)
EUR.curves
EUR.curves$discount[1,2] <- 1
EUR.curves
GBP.curves$discount
USD.curves$discount
SwapPricer::USD.curves
USD.curves %>% mutate(Date = lubridate::ymd(Date))
USD.curves %>% dplyr::mutate(Date = lubridate::ymd(Date))
USD.curves %>% dplyr::mutate(Date = lubridate::dmy(Date))
EUR.curves$discount <- tibble::tibble(Date = lubridate::dmy(EUR$`Maturity Date`), df = EUR$Discount)
lubridate::dmy(EUR$`Maturity Date`)
EUR$`Maturity Date`
EUR.curves$discount <- tibble::tibble(Date = lubridate::mdy(EUR$`Maturity Date`), df = EUR$Discount)
EUR.curves
EUR.curves[1,2] <- 1
EUR.curves$discount[1,2] <- 1
GBP.curves$discount <- tibble::tibble(Date = lubridate::mdy(GBP$`Maturity Date`), df = GBP$Discount)
USD.curves$discount <- tibble::tibble(Date = lubridate::mdy(USD$`Maturity Date`), df = USD$Discount)
USD$`Maturity Date`
USD.curves$discount <- tibble::tibble(Date = as.Date(USD$`Maturity Date`), df = USD$Discount)
USD.curves$discount
append(USD.curves$discount, c(lubridate::dmy(15042019), 1))
USD.curves$discount <- tibble::tibble(Date = as.Date(USD$`Maturity Date`), df = USD$Discount)
USD.curves$discount
rbind(USD.curves$discount, c(lubridate::dmy(15042019), 1))
rbind(USD.curves$discount, c(lubridate::dmy(150419), 1))
lubridate::dmy(15042019)
lubridate::dmy(150419)
c(lubridate::dmy(150419), 1)
library(readxl)
USD <- read_excel("~/Dropbox/Blog CuriousFRM/USD.xlsx")
View(USD)
USD.curves$discount <- tibble::tibble(Date = as.Date(USD$`Maturity Date`), df = USD$Discount)
USD.curves$discount  %>% dplyr::arrange(Date)
USD.curves$discount  %<>% dplyr::arrange(Date)
usethis::use_data(USD.curves, overwrite = TRUE)
usethis::use_data(EUR.curves, overwrite = TRUE)
usethis::use_data(GBP.curves, overwrite = TRUE)
library(SwapPricer)
devtools::document(roclets = c('rd', 'collate', 'namespace'))
library(SwapPricer)
library(SwapPricer)
library(SwapPricer)
SwapPricer::swap.basket
today <- lubridate::ymd(20190414)
library(SwapPricer)
SwapPricer::SwapPortfolioPricing(SwapPricer::swap.basket, today,
SwapPricer::EUR.curves, SwapPricer::GBP.curves,
SwapPricer::USD.curves)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
today <- lubridate::ymd(20190414)
result <- SwapPricer::SwapPortfolioPricing(SwapPricer::swap.basket, today, SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
library(SwapPricer)
library(SwapPricer)
library(SwapPricer)
