SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
profvis::profvis({SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)})
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)})
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
floating.data
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
View(cashflows)
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact)
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
purrr::reduce(c)
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
do.call("c")
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{do.call("c",.data)}
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{do.call("c",.)}
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{unname(do.call("c",.))}
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
A <- cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
A
unname(do.call("c", A))
do.call("c", A)
?purrr::reduce
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
purrr::reduce(`c`)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date)
fixing.date %>% purrr::flatten()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{unname(do.call("c",.data))}
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{unname(do.call("c",.))}
A <- cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
View(A)
do.call("c", A)
class(A)
{do.call("c", A)}
(B <- do.call("c", A))
library(SwapPricer)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
swap.tabular$currency
swap.standard[grepl("CAD", swap.standard$currency),]
A <- swap.standard[grepl("CAD", swap.standard$currency),]
nrow(A)
test
test_error <- test
test_error[1,2] <- "CAD"
test_error
library(SwapPricer)
SwapPortfolioPricing(test_error, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(test_error, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date)
fixing.date
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
unname(do.call("c",.data))
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
unname(do.call("c",.))
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
purrr::reduce(c)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
purrr::reduce(c)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup()
floating.rate %>%
.[!grepl("EUR", .$currency), "max.date"]
floating.rate %>%
.[!grepl("EUR", .$currency), "max.date"] %>%
max
floating.rate %>%
.[!grepl("EUR", .$currency), "max.date"] %>%
as.array
floating.rate %>%
.[!grepl("EUR", .$currency), "max.date"] %>%
as.character.POSIXt()
floating.rate %>%
.[!grepl("EUR", .$currency), "max.date"] %>%
as.double()
floating.rate %>%
.[!grepl("EUR", .$currency), "max.date"] %>%
purrr::reduce(c)
floating.rate %>%
.[!grepl("EUR", .$currency), "max.date"] %>%
purrr::reduce(c) %>% max
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
purrr::reduce(c)
?as.Date
A <- cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
purrr::reduce(c)
typeof(A)
attributes(A)
as.Date(A, origin = "1970-01-01")
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
as.Date(A, origin = "1970-01-01")
B <- cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
View(B)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
attributes(floating.rate)
attributes(fixing.date)
is.null(attributes(fixing.date))
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
floating.rate
check
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
attributes(fixing.date)
library(SwapPricer)
test
Sys.Date()
Sys.Date() - 7
library(SwapPricer)
SwapPricer:::swap.standard
SwapPricer::df.table
EUR.curves <- list(currency = "EUR", discount = SwapPricer::df.table)
View(EUR.curves)
test
GBP.curves <- EUR.curves
GBP.curves$currency <- "GBP"
USD.curves <- GBP.curves
USD.curves$currency <- "USD"
SwapPortfolioPricing(test, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
..1
list(...)
...
purrr::pluck(list(...), "currency")
purrr::pluck(list(...), 1)
purrr::modify_depth(list(...), 2, "currency")
purrr::modify_depth(list(...), 1, "currency")
purrr::map(list(...), ~purrr::has_element(.x, "EUR"))
purrr::detect_index(list(...), "EUR")
purrr::detect(list(...), function(x) purrr::map(x, ~purrr::has_element.x, "EUR"))
purrr::detect(list(...), function(x) purrr::map(x, ~purrr::has_element(.x, "EUR")))
purrr::map(list(...), ~purrr::has_element(.x, "EUR"))
purrr::map(list(...), ~purrr::has_element(.x, "EUR")) %>% unlist
list(...)[purrr::map(list(...), ~purrr::has_element(.x, "EUR")) %>% unlist]
list(...)[purrr::map(list(...), ~purrr::has_element(.x, "EUR")) %>% unlist]$discount
list(...)[purrr::map(list(...), ~purrr::has_element(.x, "EUR")) %>% unlist][discount]
list(...)[purrr::map(list(...), ~purrr::has_element(.x, "EUR")) %>% unlist]["discount"]
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
swap
list(...)[purrr::map(list(...),
~purrr::has_element(.x, "EUR")) %>%
unlist]
list(...)
floating.history
swap
swap.dates
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
list(...)
library(SwapPricer)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
curves <- list(...)
View(curves)
curves
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
curves %>%
purrr::map(~purrr::has_element(.x, swap$currency) %>% unlist)
curves
curves %>% purrr::set_names(purrr::map(., "currency"))
library(SwapPricer)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
purrr::set_names(list(...), purrr::map(list(...), "currency"))
curves[swap$currency]
curves[swap$currency]$discount
curves[swap$currency]
curves[swap$currency]["discount"]
curves[swap$currency] %>% .data$discount
swap$currency
curves["EUR"]["discount"]
purrr::pluck(curves["EUR"], "discount")
df.table <- curves[swap$currency]$discount
curves[swap$currency]
purrr::flatten(curves[swap$currency])
purrr::flatten(curves[swap$currency])$discount
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
SwapPortfolioPricing(SwapPricer:::rerealworld.portfolio, lubridate::ymd(20190414), EUR.curves)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)
library(SwapPricer)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)
unique(floating.rate$currency)
grepl("EUR",unique(floating.rate$currency))
!grepl("EUR",unique(floating.rate$currency))
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)})
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)
floating.history
swap$currency
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)})
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)
floating.history <- floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"]
View(floating.history)
tidyr::unnest(floating.history)
floating.history
floating.history[1]
floating.history[[1]]
floating.history$rate.data
purrr::flatten(floating.history$rate.data)
A <- purrr::flatten(floating.history$rate.data)
View(A)
A[[1]]
A <- purrr::flatten(floating.history$rate.data)[[1]]
View(A)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"] %>%
{purrr::flatten(.data$rate.data)[[1]]}
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"]
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)
purrr::flatten(floating.history$rate.data)[[1]]
floating.history[floating.history$date %in%
swap.dates$fixing.date,]
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)})
library(SwapPricer)
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)})
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)})
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)})
library(SwapPricer)
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)})
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), EUR.curves)})
library(SwapPricer)
View(test)
write.csv(test)
?write.csv
write.csv(test, file = "input")
SwapPricer:::swap.standard
SwapPricer:::swap.standard.calendar
library(readr)
swap_portfolio <- read_csv("input.csv")
View(swap_portfolio)
swap.basket <- swap_portfolio
usethis::use_data(swap.basket, overwrite = TRUE)
usethis::use_data(EUR.curves)
usethis::use_data(GBP.curves)
usethis::use_data(USD.curves)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
library(SwapPricer)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
cashflows
library(SwapPricer)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
library(SwapPricer)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
floating.rate
swap.portfolio
floating.rate
floating.rate %>% na.omit
floating.rate %>% na.omit(.)
floating.rate[!is.na(min.date),]
floating.rate[!is.na(floating.rate$min.date),]
floating.rate[is.na(floating.rate$min.date),]
floating.rate[3,3
]
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date),
max.date = max(fixing.date)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup()
Quandl::Quandl("BOF/QS_D_IEUTIO1A", start_date = NA, end_date = NA)
floating.rate[3,3
]
floating.rate[3,3]
is.na(floating.rate[3,3])
typeof(floating.rate[3,3])
unlist(floating.rate[3,3])
floating.rate[grepl("NA", floating.rate$min.date),]
floating.rate[!grepl("NA", floating.rate$min.date),]
floating.rate[!floating.rate$min.date == -Inf,]
floating.rate[!floating.rate$min.date == Inf,]
library(SwapPricer)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
library(SwapPricer)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
unique(floating.rate$currency)
floating.rate$currency
unique(floating.rate$currency)
base::setdiff(unique(floating.rate$currency), "EUR")
length(base::setdiff(unique(floating.rate$currency), "EUR"))
setdiff("EUR","EUR")
length(setdiff("EUR","EUR"))
library(SwapPricer)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
floating.rate
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date)
floating.rate <- tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date)
floating.rate %>% na.omit
library(SwapPricer)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
library(SwapPricer)
SwapPortfolioPricing(swap.basket, lubridate::ymd(20190414), EUR.curves, GBP.curves, USD.curves)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
stats::na.omit(.data)
floating.rate
length(setdiff(unique(floating.rate$currency), "EUR"))
floating.rate[!grepl("EUR", floating.rate$currency), "max.date"] %>%
purrr::reduce(c) %>%
max
check
today - 7
library(SwapPricer)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
View(test)
library(readr)
USD_curve <- read_csv("~/Documents/Curious FRM/Curious FRM Blog/data/Basket of IRS/USD Curve at 140419.csv")
View(USD_curve)
SwapPricer:::swap.standard.calendar
curve <- list(currency = "USD", discounting = USD_curve)
today <- lubridate::dmy(14042019)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
currency
swap.standard.calendar[
grepl(currency,  swap.standard.calendar$currency),][["lag"]]
-lag
RQuantLib::advance(calendar = calendar,
dates = accrual.date,
n = -lag,
timeUnit = 0,
bdc = 1,
emr = TRUE)
accrual.date
currency
swap.standard.calendar[
grepl(currency,  swap.standard.calendar$currency),][["lag"]]
accrual.date
RQuantLib::advance(calendar = calendar,
dates = accrual.date,
n = -lag,
timeUnit = 0,
bdc = 1,
emr = TRUE)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::EUR.curves, SwapPricer::GBP.curves, SwapPricer::USD.curves)
