observation_end = .$max.date) %>%
purrr::set_names(c("date", "value"))),
list(Quandl::Quandl(.$floating.rate.code,
start_date = .$min.date,
end_date = .$max.date))))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates) %>%
dplyr::rowwise(.)
?dplyr::rowwise
DownloadRate <- function(floating.table){
floating.table %>%
{ifelse(grepl("FRED",.$source),
list(fredr::fredr(.$floating.rate.code,
observation_start = .$min.date,
observation_end = .$max.date) %>%
purrr::set_names(c("date", "value"))),
list(Quandl::Quandl(.$floating.rate.code,
start_date = .$min.date,
end_date = .$max.date)))}
}
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates) %>%
dplyr::rowwise(.) %>%
dplyr::mutate(rate.data = DownloadRate(.))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates) %>%
dplyr::mutate(rate.data = DownloadRate(.))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::mutate(rate.data = DownloadRate(.))
?nest
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
tidyr::nest()
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
tidyr::nest(-currency, -time.unit)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
tidyr::nest(dplyr::vars(currency, time.unit))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
tidyr::nest(dplyr::vars("currency", "time.unit"))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
tidyr::nest(c("currency", "time.unit"))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
tidyr::nest(c(currency, time.unit))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit"))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit"))
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
tidyr::nest(-currency, -time.unit)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup(.) %>%
tidyr::nest(-currency, -time.unit)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup(.)
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup(.) %>%
tidyr::nest(-currency, -time.unit)
floating.table <- tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup(.) %>%
tidyr::nest(-currency, -time.unit)
floating.table$data
DownloadRate <- function(floating.data){
floating.data %>%
{ifelse(grepl("FRED",.$source),
list(fredr::fredr(.$floating.rate.code,
observation_start = .$min.date,
observation_end = .$max.date) %>%
purrr::set_names(c("date", "value"))),
list(Quandl::Quandl(.$floating.rate.code,
start_date = .$min.date,
end_date = .$max.date)))}
}
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup(.) %>%
tidyr::nest(-currency, -time.unit) %>%
dplyr::mutate(rate.data = purrr::map(data, DownloadRate))
rlang::last_error()
DownloadRate <- function(floating.data){
browser()
floating.data %>%
{ifelse(grepl("FRED",.$source),
list(fredr::fredr(.$floating.rate.code,
observation_start = .$min.date,
observation_end = .$max.date) %>%
purrr::set_names(c("date", "value"))),
list(Quandl::Quandl(.$floating.rate.code,
start_date = .$min.date,
end_date = .$max.date)))}
}
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup(.) %>%
tidyr::nest(-currency, -time.unit) %>%
dplyr::mutate(rate.data = purrr::map(data, DownloadRate))
floating.data
floating.data %>%
{ifelse(grepl("FRED",.$source),
list(fredr::fredr(.$floating.rate.code,
observation_start = .$min.date,
observation_end = .$max.date) %>%
purrr::set_names(c("date", "value"))),
list(Quandl::Quandl(.$floating.rate.code,
start_date = .$min.date,
end_date = .$max.date)))}
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
currency <- unname(purrr::map_chr(swap.portfolio,"currency"))
time.unit <- unname(unlist(purrr::map_depth(swap.portfolio, 1, "floating.freq")))
fixing.date <- cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten(.) %>%
purrr::reduce(c)
floating.table <- tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup(.) %>%
tidyr::nest(-currency, -time.unit) %>%
dplyr::mutate(rate.data = purrr::map(data, DownloadRate))
DownloadRate <- function(floating.data){
floating.data %>%
{ifelse(grepl("FRED",.$source),
list(fredr::fredr(.$floating.rate.code,
observation_start = .$min.date,
observation_end = .$max.date)),
list(Quandl::Quandl(.$floating.rate.code,
start_date = .$min.date,
end_date = .$max.date) %>%
purrr::set_names(c("date", "value"))))}
}
floating.table <- tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup(.) %>%
tidyr::nest(-currency, -time.unit) %>%
dplyr::mutate(rate.data = purrr::map(data, DownloadRate))
View(floating.table)
floating.table
floating.table <- tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date) %>%
dplyr::group_by(currency, time.unit) %>%
dplyr::summarise(min.date = min(fixing.date, na.rm = TRUE),
max.date = max(fixing.date, na.rm = TRUE)) %>%
dplyr::left_join(swap.standard.rates, by = c("currency", "time.unit")) %>%
dplyr::ungroup(.) %>%
tidyr::nest(-currency, -time.unit) %>%
dplyr::mutate(rate.data = purrr::map(data, DownloadRate)) %>%
dplyr::select(-data)
floating.table
View(floating.table[[4]][[1]])
View(floating.table[[4]][[3]])
floating.table[[4]][[3]]
floating.table[[4]][[2]]
View(floating.table)
floating.table[[4]][[3]]
floating.table
floating.table$rate.data[[1]]
floating.table$rate.data[[2]]
floating.table$rate.data[[3]]
floating.table$rate.data[[4]]
fredr::fredr("USD3MTD156N")
tail(fredr::fredr("USD3MTD156N"))
fredr::fredr("USD3MTD156N", observation_start = as.Date("2019-07-05"), observation_end = as.Date("2019-07-19"))
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
View(floating.history)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
floating.history
cashflows
length(cashflows)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
floating.history
floating.history
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$type[[leg.type]], "rate.data"]
floating.history[
grepl(swap$currency, floating.history$currency), "rate.data"]
floating.history$time.unit
swap$type
swap$time.unit [[leg.type]]
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"]
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], ]
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"] %>% unlist
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"] %>% purrr::flatten(.)
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"] %>% purrr::flatten(.) %>% purrr::reduce(c)
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"] %>% purrr::reduce(c)
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"] %>% tibble::as.tibble()
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"] %>% tidyr::unnest()
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"] %>% tidyr::unnest() %>% tidyr::unnest()
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
View(floating.history)
View(floating.history[[3]][[1]])
library(SwapPricer)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]],][["rate.data"]]
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]],]
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]],][["rate.data"]] %>%
tidyr::unnest()
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]],][["rate.data"]]
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]],"rate.data"]
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]],"rate.data"] %>% tidyr::unnest()
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]],"rate.data"] %>% tidyr::unnest() %>% tidyr::unnest()
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
floating.history
swap.dates$fixing.date
fixing.row
fixing.row[["value"]]
swap
floating.history[
grepl(swap$currency, floating.history$currency) &
floating.history$time.unit == swap$time.unit[[leg.type]], "rate.data"] %>%
tidyr::unnest() %>%
tidyr::unnest()
rate
usethis::use_package("tidyr")
usethis::use_package("fredr")
library(SwapPricer)
library(SwapPricer)
?subset
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
floating.history
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
profvis::profvis({SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)})
profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)})
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
floating.data
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
View(cashflows)
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact)
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
purrr::reduce(c)
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
do.call("c")
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{do.call("c",.data)}
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{do.call("c",.)}
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{unname(do.call("c",.))}
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
A <- cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
A
unname(do.call("c", A))
do.call("c", A)
?purrr::reduce
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
purrr::reduce(`c`)
SwapPortfolioPricing(test, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
library(SwapPricer)
SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::df.table)
fixing.date
tibble::tibble(currency = currency,
time.unit = time.unit,
fixing.date = fixing.date)
fixing.date %>% purrr::flatten()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{unname(do.call("c",.data))}
cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten() %>%
{unname(do.call("c",.))}
A <- cashflows %>%
purrr::map_depth(2, "fixing.date") %>%
purrr::map(purrr::compact) %>%
tidyr::replace_na() %>%
purrr::flatten()
View(A)
do.call("c", A)
class(A)
{do.call("c", A)}
(B <- do.call("c", A))
